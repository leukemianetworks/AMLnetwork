I. Installation
	The following files need to be located in the same directory (can be the same directory).
		Directory1: processMicroarray.R, GEO CEL data
		Directory2: multidatanetanalysis.py, TI_2486_03022014.txt, RG_03042014, TF_03042014.txt, HIPPIE_PPI_04012014.txt, processed Data generated by processing

II. processMicroarray.R
	This script is used to convert GEO .CEL data into a usable format

	a. Running processMicroarray.R 
		Converts raw CEL data into the same format without the need for another check program
		i. Open R and set directory to the path of the source code
			> pd <- ‘PATH_TO_DIRECTORY’ # Directory containing the source code of processMicroarray.r
			> setwd(pd)
			> source(‘processMicroarry.r’)
			> wd <- ‘PATH_TO_DIRECTORY’ # Directory containing RAW CEL data
			> setwd(wd)

		ii. Use readrawdata to read in RAW.tar file using the corresponding library name (this may take 5-10min)
			> expr <- readrawdata(‘GSE30375_RAW.tar’, ‘hgu133a.db’)

		iii. Use annotatedata to generate the necessary processed files for the multidatanetanalysis step (this may take up to an hour, note the progress bar across the screen)
			> annotatedata(expr)

			This will generate a processed file that can be used as input for the multidatanetanalysis step. Make sure that this file named Microarray_GSEXXXXXX_processed.txt is moved into the same location as multidatanetanalysis.py and required files.

III. multidatanetanalysis.py
	multidatanetanalysis.py is the main program that generates the AML network interactions the following packages are needed to use.

		os
		shutil
		timeit
		gzip
		zipfile 
		numpy
		scipy
		matplotlib
		Tkinter  
		tkFileDialog
		zipfile

		Run the require_check.py program to determine which of the libraries need to be installed, from the command line run. If you do not have python you will need version 2.7. 

	a. require_check.py
		This script when run will determine which of the necessary packages need to be installed.

		i. Running require_check.py
			From the command line
				$ python require_check.py
			From a python shell
				>> import require_check

			Any packages not installed will be listed as Need to Install. Otherwise you will need to install the required packages. To do so, follow the instructions for your operating system. 
			For Linux users sudo easy_install PACKAGE_NAME should install the package, otherwise install pip (https://pip.pypa.io/en/latest/installing.html), and use 

			   $ pip install PACKAGE_NAME 
       
				The following packages are not normally installed with python and may need to be installed. Follow instructions for your operating system
				Links to official sites: numpy		matplotlib		scipy			Link to Windows binary files 
										 numpy.org	matplotlib.org	scipy.org		http://www.lfd.uci.edu/~gohlke/pythonlibs/

	b. multidatanetanalyis.py
		Open python through command line, or GUI using python 2.7 
		Set working directory to the folder containting multidatanetanalayis.py
		Make sure in this directory are the files
			TI_2486_03022014.txt
			RG_03042014
			TF_03042014.txt
			HIPPIE_PPI_04012014.txt

		i. Running multidatanetanalysis.py
			using python shell or GUI
				>> import multidatanetanalysis

			a. Single Data Set	
				Run the following lines for single network/data_file analysis
					>> singledataFile = multidatanetanalysis.SingleDatasetNetworkAssembling(FILE_NAME)
					   This step will take anywhere from 30min to 40min based on the size of the dataset

			b. Multiple Data Sets
				For multiple datasets run the following line and then select the number of files (where N is the number of files 2, 3, 4 ...)
				   >> multidataFile = multidatanetanalysis.MultiDatasetNetworkAssembling(numFiles = N) 

			   This step may take as long as 30min for each dataset

		ii. Overlap Generation:
			The following steps will generate the overlap files for the inputted datasets. This may take 15min or longer depending on the number of datasets used
				>> multidataFile.intgrn()  # Generates the Gene Regulation Network (GRN) Overlap files (Called TFG in the corresponding paper)
				>> multidataFile.intppi()  # Generates the Protein Protein Interaction (PPI) Network Overlap files
			The resulting overlap_N files will have the interactions for each of the different sets of data.


